apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-red
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: node-red
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: default
  name: node-red
subjects:
  - kind: ServiceAccount
    name: node-red
    apiGroup: ""
    namespace: default
roleRef:
  kind: ClusterRole
  name: node-red
  apiGroup: ""
---
apiVersion: v1
kind: Service
metadata:
  name: node-red
spec:
  type: NodePort
  ports:
  - port: 1880
    targetPort: http
    protocol: TCP
    name: http
  selector:
    name: node-red
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red
spec:
  replicas: 1
  selector:
    matchLabels:
      name: node-red
  template:
    metadata:
      labels:
        name: node-red
    spec:
      serviceAccountName: node-red
      containers:
        - name: node-node-red
          image: "nodered/node-red:2.1.4"
          imagePullPolicy: IfNotPresent
          env:
            - name: "FLOWS"
              value: "flows.json"
            - name: "TZ"
              value: "UTC"
          ports:
            - name: http
              containerPort: 1880
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 1880
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 1880
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 1880
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5